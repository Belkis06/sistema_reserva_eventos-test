generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id_usuario   Int         @id @default(autoincrement())
  nombre       String      @db.VarChar(100)
  correo       String      @unique @db.VarChar(100)
  contrasena   String      @db.VarChar(255)
  tipo_usuario TipoUsuario
  eventos      eventos[]   @relation("OrganizadorEventos")
  reservas     reservas[]
}

model lugares {
  id_lugar  Int       @id @default(autoincrement())
  nombre    String    @db.VarChar(100)
  direccion String    @db.Text
  capacidad Int
  eventos   eventos[]
}

model eventos {
  id_evento      Int        @id @default(autoincrement())
  titulo         String     @db.VarChar(150)
  descripcion    String?    @db.Text
  fecha_hora     DateTime
  id_lugar       Int
  id_organizador Int
  entradas       entradas[]
  lugar          lugares    @relation(fields: [id_lugar], references: [id_lugar])
  organizador    usuarios   @relation("OrganizadorEventos", fields: [id_organizador], references: [id_usuario])

  @@index([id_lugar], map: "eventos_id_lugar_fkey")
  @@index([id_organizador], map: "eventos_id_organizador_fkey")
}

model entradas {
  id_entrada       Int        @id @default(autoincrement())
  id_evento        Int
  precio           Decimal    @db.Decimal(10, 2)
  total_disponible Int
  evento           eventos    @relation(fields: [id_evento], references: [id_evento])
  reservas         reservas[]

  @@index([id_evento], map: "entradas_id_evento_fkey")
}

model reservas {
  id_reserva    Int      @id @default(autoincrement())
  id_entrada    Int
  id_usuario    Int
  cantidad      Int
  fecha_reserva DateTime @default(now())
  entrada       entradas @relation(fields: [id_entrada], references: [id_entrada])
  usuario       usuarios @relation(fields: [id_usuario], references: [id_usuario])

  @@index([id_entrada], map: "reservas_id_entrada_fkey")
  @@index([id_usuario], map: "reservas_id_usuario_fkey")
}

enum TipoUsuario {
  organizador
  asistente
}
